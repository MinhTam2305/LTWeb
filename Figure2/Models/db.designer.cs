#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Figure2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LTWeb")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
        public dbDataContext() :
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LTWebConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAD;
		
		private string _HoTen;
		
		private string _DienThoai;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private System.Nullable<int> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaADChanging(int value);
    partial void OnMaADChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(System.Nullable<int> value);
    partial void OnQuyenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaAD
		{
			get
			{
				return this._MaAD;
			}
			set
			{
				if ((this._MaAD != value))
				{
					this.OnMaADChanging(value);
					this.SendPropertyChanging();
					this._MaAD = value;
					this.SendPropertyChanged("MaAD");
					this.OnMaADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(10)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(15)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(15)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="Int")]
		public System.Nullable<int> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maGioHang;
		
		private System.Nullable<int> _idNguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGioHangChanging(int value);
    partial void OnmaGioHangChanged();
    partial void OnidNguoiDungChanging(System.Nullable<int> value);
    partial void OnidNguoiDungChanged();
    #endregion
		
		public Cart()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGioHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maGioHang
		{
			get
			{
				return this._maGioHang;
			}
			set
			{
				if ((this._maGioHang != value))
				{
					this.OnmaGioHangChanging(value);
					this.SendPropertyChanging();
					this._maGioHang = value;
					this.SendPropertyChanged("maGioHang");
					this.OnmaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNguoiDung", DbType="Int")]
		public System.Nullable<int> idNguoiDung
		{
			get
			{
				return this._idNguoiDung;
			}
			set
			{
				if ((this._idNguoiDung != value))
				{
					if ((this._NguoiDung.HasLoadedOrAssignedValue || this._NguoiDung1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._idNguoiDung = value;
					this.SendPropertyChanged("idNguoiDung");
					this.OnidNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Cart", Storage="_NguoiDung", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Cart1", Storage="_NguoiDung1", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.Carts1.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.Carts1.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDanhMuc;
		
		private string _tenDanhMuc;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDanhMucChanging(int value);
    partial void OnmaDanhMucChanged();
    partial void OntenDanhMucChanging(string value);
    partial void OntenDanhMucChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDanhMuc
		{
			get
			{
				return this._maDanhMuc;
			}
			set
			{
				if ((this._maDanhMuc != value))
				{
					this.OnmaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._maDanhMuc = value;
					this.SendPropertyChanged("maDanhMuc");
					this.OnmaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDanhMuc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenDanhMuc
		{
			get
			{
				return this._tenDanhMuc;
			}
			set
			{
				if ((this._tenDanhMuc != value))
				{
					this.OntenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._tenDanhMuc = value;
					this.SendPropertyChanged("tenDanhMuc");
					this.OntenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="maDanhMuc", OtherKey="danhMuc")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product1", Storage="_Products1", ThisKey="maDanhMuc", OtherKey="danhMuc")]
		public EntitySet<Product> Products1
		{
			get
			{
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maFeedback;
		
		private System.Nullable<int> _idNguoiDung;
		
		private System.Nullable<int> _maSanPham;
		
		private string _noiDung;
		
		private System.Nullable<System.DateTime> _thoiGian;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaFeedbackChanging(int value);
    partial void OnmaFeedbackChanged();
    partial void OnidNguoiDungChanging(System.Nullable<int> value);
    partial void OnidNguoiDungChanged();
    partial void OnmaSanPhamChanging(System.Nullable<int> value);
    partial void OnmaSanPhamChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    partial void OnthoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnthoiGianChanged();
    #endregion
		
		public Feedback()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maFeedback", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maFeedback
		{
			get
			{
				return this._maFeedback;
			}
			set
			{
				if ((this._maFeedback != value))
				{
					this.OnmaFeedbackChanging(value);
					this.SendPropertyChanging();
					this._maFeedback = value;
					this.SendPropertyChanged("maFeedback");
					this.OnmaFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNguoiDung", DbType="Int")]
		public System.Nullable<int> idNguoiDung
		{
			get
			{
				return this._idNguoiDung;
			}
			set
			{
				if ((this._idNguoiDung != value))
				{
					if ((this._NguoiDung.HasLoadedOrAssignedValue || this._NguoiDung1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._idNguoiDung = value;
					this.SendPropertyChanged("idNguoiDung");
					this.OnidNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSanPham", DbType="Int")]
		public System.Nullable<int> maSanPham
		{
			get
			{
				return this._maSanPham;
			}
			set
			{
				if ((this._maSanPham != value))
				{
					if ((this._Product.HasLoadedOrAssignedValue || this._Product1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._maSanPham = value;
					this.SendPropertyChanged("maSanPham");
					this.OnmaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> thoiGian
		{
			get
			{
				return this._thoiGian;
			}
			set
			{
				if ((this._thoiGian != value))
				{
					this.OnthoiGianChanging(value);
					this.SendPropertyChanging();
					this._thoiGian = value;
					this.SendPropertyChanged("thoiGian");
					this.OnthoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Feedback", Storage="_NguoiDung", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Feedback1", Storage="_NguoiDung1", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.Feedbacks1.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.Feedbacks1.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback", Storage="_Product", ThisKey="maSanPham", OtherKey="maSanPham", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._maSanPham = value.maSanPham;
					}
					else
					{
						this._maSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback1", Storage="_Product1", ThisKey="maSanPham", OtherKey="maSanPham", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.Feedbacks1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.Feedbacks1.Add(this);
						this._maSanPham = value.maSanPham;
					}
					else
					{
						this._maSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCTDonHang;
		
		private System.Nullable<int> _maDonHang;
		
		private System.Nullable<int> _maSanPham;
		
		private int _soLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<DonHang> _DonHang1;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCTDonHangChanging(int value);
    partial void OnmaCTDonHangChanged();
    partial void OnmaDonHangChanging(System.Nullable<int> value);
    partial void OnmaDonHangChanged();
    partial void OnmaSanPhamChanging(System.Nullable<int> value);
    partial void OnmaSanPhamChanged();
    partial void OnsoLuongChanging(int value);
    partial void OnsoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public OrderDetail()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._DonHang1 = default(EntityRef<DonHang>);
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCTDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maCTDonHang
		{
			get
			{
				return this._maCTDonHang;
			}
			set
			{
				if ((this._maCTDonHang != value))
				{
					this.OnmaCTDonHangChanging(value);
					this.SendPropertyChanging();
					this._maCTDonHang = value;
					this.SendPropertyChanged("maCTDonHang");
					this.OnmaCTDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", DbType="Int")]
		public System.Nullable<int> maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					if ((this._DonHang.HasLoadedOrAssignedValue || this._DonHang1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSanPham", DbType="Int")]
		public System.Nullable<int> maSanPham
		{
			get
			{
				return this._maSanPham;
			}
			set
			{
				if ((this._maSanPham != value))
				{
					if ((this._Product.HasLoadedOrAssignedValue || this._Product1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._maSanPham = value;
					this.SendPropertyChanged("maSanPham");
					this.OnmaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int NOT NULL")]
		public int soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_OrderDetail", Storage="_DonHang", ThisKey="maDonHang", OtherKey="maDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._maDonHang = value.maDonHang;
					}
					else
					{
						this._maDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_OrderDetail1", Storage="_DonHang1", ThisKey="maDonHang", OtherKey="maDonHang", IsForeignKey=true)]
		public DonHang DonHang1
		{
			get
			{
				return this._DonHang1.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang1.Entity;
				if (((previousValue != value) 
							|| (this._DonHang1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang1.Entity = null;
						previousValue.OrderDetails1.Remove(this);
					}
					this._DonHang1.Entity = value;
					if ((value != null))
					{
						value.OrderDetails1.Add(this);
						this._maDonHang = value.maDonHang;
					}
					else
					{
						this._maDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_Product", ThisKey="maSanPham", OtherKey="maSanPham", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._maSanPham = value.maSanPham;
					}
					else
					{
						this._maSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail1", Storage="_Product1", ThisKey="maSanPham", OtherKey="maSanPham", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.OrderDetails1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.OrderDetails1.Add(this);
						this._maSanPham = value.maSanPham;
					}
					else
					{
						this._maSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDonHang;
		
		private System.Nullable<int> _idNguoiDung;
		
		private System.DateTime _ngayDatHang;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<OrderDetail> _OrderDetails1;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDonHangChanging(int value);
    partial void OnmaDonHangChanged();
    partial void OnidNguoiDungChanging(System.Nullable<int> value);
    partial void OnidNguoiDungChanged();
    partial void OnngayDatHangChanging(System.DateTime value);
    partial void OnngayDatHangChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    #endregion
		
		public DonHang()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderDetails1 = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails1), new Action<OrderDetail>(this.detach_OrderDetails1));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNguoiDung", DbType="Int")]
		public System.Nullable<int> idNguoiDung
		{
			get
			{
				return this._idNguoiDung;
			}
			set
			{
				if ((this._idNguoiDung != value))
				{
					if ((this._NguoiDung.HasLoadedOrAssignedValue || this._NguoiDung1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._idNguoiDung = value;
					this.SendPropertyChanged("idNguoiDung");
					this.OnidNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDatHang", DbType="DateTime NOT NULL")]
		public System.DateTime ngayDatHang
		{
			get
			{
				return this._ngayDatHang;
			}
			set
			{
				if ((this._ngayDatHang != value))
				{
					this.OnngayDatHangChanging(value);
					this.SendPropertyChanging();
					this._ngayDatHang = value;
					this.SendPropertyChanged("ngayDatHang");
					this.OnngayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_OrderDetail", Storage="_OrderDetails", ThisKey="maDonHang", OtherKey="maDonHang")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_OrderDetail1", Storage="_OrderDetails1", ThisKey="maDonHang", OtherKey="maDonHang")]
		public EntitySet<OrderDetail> OrderDetails1
		{
			get
			{
				return this._OrderDetails1;
			}
			set
			{
				this._OrderDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_NguoiDung", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang1", Storage="_NguoiDung1", ThisKey="idNguoiDung", OtherKey="idNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.DonHangs1.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.DonHangs1.Add(this);
						this._idNguoiDung = value.idNguoiDung;
					}
					else
					{
						this._idNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DonHang1 = this;
		}
		
		private void detach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DonHang1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNguoiDung;
		
		private string _tenNguoiDung;
		
		private string _email;
		
		private string _diaChi;
		
		private string _matKhau;
		
		private string _soDienThoai;
		
		private string _taiKhoan;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Cart> _Carts1;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Feedback> _Feedbacks1;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<DonHang> _DonHangs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNguoiDungChanging(int value);
    partial void OnidNguoiDungChanged();
    partial void OntenNguoiDungChanging(string value);
    partial void OntenNguoiDungChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnsoDienThoaiChanging(string value);
    partial void OnsoDienThoaiChanged();
    partial void OntaiKhoanChanging(string value);
    partial void OntaiKhoanChanged();
    #endregion
		
		public NguoiDung()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Carts1 = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts1), new Action<Cart>(this.detach_Carts1));
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Feedbacks1 = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks1), new Action<Feedback>(this.detach_Feedbacks1));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._DonHangs1 = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs1), new Action<DonHang>(this.detach_DonHangs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNguoiDung
		{
			get
			{
				return this._idNguoiDung;
			}
			set
			{
				if ((this._idNguoiDung != value))
				{
					this.OnidNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._idNguoiDung = value;
					this.SendPropertyChanged("idNguoiDung");
					this.OnidNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNguoiDung", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenNguoiDung
		{
			get
			{
				return this._tenNguoiDung;
			}
			set
			{
				if ((this._tenNguoiDung != value))
				{
					this.OntenNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._tenNguoiDung = value;
					this.SendPropertyChanged("tenNguoiDung");
					this.OntenNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDienThoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string soDienThoai
		{
			get
			{
				return this._soDienThoai;
			}
			set
			{
				if ((this._soDienThoai != value))
				{
					this.OnsoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._soDienThoai = value;
					this.SendPropertyChanged("soDienThoai");
					this.OnsoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taiKhoan", DbType="NVarChar(50)")]
		public string taiKhoan
		{
			get
			{
				return this._taiKhoan;
			}
			set
			{
				if ((this._taiKhoan != value))
				{
					this.OntaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._taiKhoan = value;
					this.SendPropertyChanged("taiKhoan");
					this.OntaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Cart", Storage="_Carts", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Cart1", Storage="_Carts1", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<Cart> Carts1
		{
			get
			{
				return this._Carts1;
			}
			set
			{
				this._Carts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Feedback", Storage="_Feedbacks", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Feedback1", Storage="_Feedbacks1", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<Feedback> Feedbacks1
		{
			get
			{
				return this._Feedbacks1;
			}
			set
			{
				this._Feedbacks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_DonHangs", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang1", Storage="_DonHangs1", ThisKey="idNguoiDung", OtherKey="idNguoiDung")]
		public EntitySet<DonHang> DonHangs1
		{
			get
			{
				return this._DonHangs1;
			}
			set
			{
				this._DonHangs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_Carts1(Cart entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_Carts1(Cart entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_DonHangs1(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_DonHangs1(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSanPham;
		
		private string _tenSanPham;
		
		private string _moTa;
		
		private int _gia;
		
		private int _soLuong;
		
		private System.Nullable<int> _danhMuc;
		
		private string _anh;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Feedback> _Feedbacks1;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<OrderDetail> _OrderDetails1;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSanPhamChanging(int value);
    partial void OnmaSanPhamChanged();
    partial void OntenSanPhamChanging(string value);
    partial void OntenSanPhamChanged();
    partial void OnmoTaChanging(string value);
    partial void OnmoTaChanged();
    partial void OngiaChanging(int value);
    partial void OngiaChanged();
    partial void OnsoLuongChanging(int value);
    partial void OnsoLuongChanged();
    partial void OndanhMucChanging(System.Nullable<int> value);
    partial void OndanhMucChanged();
    partial void OnanhChanging(string value);
    partial void OnanhChanged();
    #endregion
		
		public Product()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Feedbacks1 = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks1), new Action<Feedback>(this.detach_Feedbacks1));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderDetails1 = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails1), new Action<OrderDetail>(this.detach_OrderDetails1));
			this._Category = default(EntityRef<Category>);
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maSanPham
		{
			get
			{
				return this._maSanPham;
			}
			set
			{
				if ((this._maSanPham != value))
				{
					this.OnmaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._maSanPham = value;
					this.SendPropertyChanged("maSanPham");
					this.OnmaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenSanPham
		{
			get
			{
				return this._tenSanPham;
			}
			set
			{
				if ((this._tenSanPham != value))
				{
					this.OntenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._tenSanPham = value;
					this.SendPropertyChanged("tenSanPham");
					this.OntenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string moTa
		{
			get
			{
				return this._moTa;
			}
			set
			{
				if ((this._moTa != value))
				{
					this.OnmoTaChanging(value);
					this.SendPropertyChanging();
					this._moTa = value;
					this.SendPropertyChanged("moTa");
					this.OnmoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Int NOT NULL")]
		public int gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int NOT NULL")]
		public int soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_danhMuc", DbType="Int")]
		public System.Nullable<int> danhMuc
		{
			get
			{
				return this._danhMuc;
			}
			set
			{
				if ((this._danhMuc != value))
				{
					if ((this._Category.HasLoadedOrAssignedValue || this._Category1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndanhMucChanging(value);
					this.SendPropertyChanging();
					this._danhMuc = value;
					this.SendPropertyChanged("danhMuc");
					this.OndanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string anh
		{
			get
			{
				return this._anh;
			}
			set
			{
				if ((this._anh != value))
				{
					this.OnanhChanging(value);
					this.SendPropertyChanging();
					this._anh = value;
					this.SendPropertyChanged("anh");
					this.OnanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback", Storage="_Feedbacks", ThisKey="maSanPham", OtherKey="maSanPham")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback1", Storage="_Feedbacks1", ThisKey="maSanPham", OtherKey="maSanPham")]
		public EntitySet<Feedback> Feedbacks1
		{
			get
			{
				return this._Feedbacks1;
			}
			set
			{
				this._Feedbacks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_OrderDetails", ThisKey="maSanPham", OtherKey="maSanPham")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail1", Storage="_OrderDetails1", ThisKey="maSanPham", OtherKey="maSanPham")]
		public EntitySet<OrderDetail> OrderDetails1
		{
			get
			{
				return this._OrderDetails1;
			}
			set
			{
				this._OrderDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="danhMuc", OtherKey="maDanhMuc", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._danhMuc = value.maDanhMuc;
					}
					else
					{
						this._danhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product1", Storage="_Category1", ThisKey="danhMuc", OtherKey="maDanhMuc", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this._danhMuc = value.maDanhMuc;
					}
					else
					{
						this._danhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_Feedbacks1(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
	}
}
#pragma warning restore 1591
